%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 257.000000 86.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.4 (Build 16E195) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 257 86
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 257 86
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: ArialMT
%!FontType1-1.0: ArialMT 1.0000.5.0600
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /ArialMT def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /s put
dup 34 /m put
dup 35 /a put
dup 36 /l put
dup 37 /t put
dup 38 /k put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1361 1 index div -665 2 index div 4096 3 index div 2060 5 -1 roll div]cvx def
/sfnts [<







2900E0032900020329B22B1D1FB90327031DB23B1F40B80323B31215320F412D03200001002F0320000100200320006F032000AF032000BF03200004005F031E00010010031E007F031E0080031E00AF031E00BF031E00D0031E00060000031E0010031E0020031E006F031E009F031E00E0031E0006031D031CB2201F1041270319007F03190002000F031700EF031700FF03170003001F0317002F0317004F0317005F0317008F0317009F03170006000F0317005F0317006F0317007F031700BF031700F00317000600400317B2923340B80317B28B3340B80317B36A6C3240B80317B2613340B80317B35C5D3240B80317B357593240B80317B34D513240B80317B344493240B80317B23A3340B80317B331343240B80317B32E423240B80317B3272C3240B80317B312253280B80317B30A0D32C04116031600D00316000200700316000102C4000F0101001F00A0031500B0031500020306000F0101001F00400312B32426329FBF03040001030203010064001FFFC00301B20D1132410A02FF02EF0012001F02EE02ED0064001FFFC002EDB30E11329F414A02E200AF02E200BF02E2000302E202E202E102E1007F02E00001001002E0003F02E0009F02E000BF02E000CF02E000EF02E0000602E002E002DF02DF02DE02DE000F02DD002F02DD003F02DD005F02DD009F02DD00BF02DD00EF02DD000702DD02DD001002DC0001000002DC0001001002DC003F02DC000202DC02DC001002DB000102DB02DB000F02DA000102DA02DAFFC002D3B2373932B9FFC002D3B22B2F32B9FFC002D3B21F2532B9FFC002D3B2171B32B9FFC002D3B2121632B802D2B2F9291FB90326031CB23B1F40BB0322003E00330322B225311FB80318B23C691FB802E3B3202B1FA0413002D400B002D40002000002D4001002D4002002D4005002D4006002D4007002D40006006002D6007002D6008002D6009002D600A002D600B002D60006000002D6001002D6002002CA002002CC002002D6003002D6004002D6005002D6000802D0B2202B1FB802CFB226421F411602CE02C70017001F02CD02C80017001F02CC02C60017001F02CB02C50017001F02C902C5001E001F02CA02C6B21E1F00410B02C6000002C7001002C6001002C7002F02C5000502C1B324121FFF411102BF0001001F02BF002F02BF003F02BF004F02BF005F02BF008F02BF000602BF0222B2641F12410B02BB00CA0800001F02B200E90800001F02A600A20800406A1F4026434932402043493240263A3D3240203A3D329F209F26024026969932402096993240268E923240208E92324026848C324020848C3240267A813240207A813240266C763240206C76324026646A324020646A3240265A5F3240205A5F3240264F543240204F5432B8029EB724271F374F6B0120410F027700300277


00>] def
/CharStrings 8 dict dup begin
/.notdef 0 def
/a 1 def
/k 2 def
/l 3 def
/m 4 def
/s 5 def
/t 6 def
/uniA788 7 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1361 -665 4096 2060}def
/UniqueID 4173880 def
currentdict currentfile eexec

EFE25AC70F93108D5156C70BD4DE4E5482900DD0B62E16B41BCE4AD78A64BAF6CB37ED7D9004DCCC28A0062841AF9AE67A19F4B15615DF33AEDE613A4837E8EBF246CB1816C70E60985AC300253B66078EB9002D58EA37B26A3B22BE14C63B54A0612C12AE00EF2572719C4B0D73FD48AB4EAFCBCA29CF83B77CFA44308DB4A1B4BFD0B30EAF7FB1DDE19D42A471D448075988E03F499564F4B86E56F4824F788A1AACC07DE1FB2406C84937A3572E6684D08DA8353C9D4B7760C4EB1B6711BEA60089331C94587A7479E9DAA52AF9C381E5211F14DE51512326318187ABAFAB3A87485C72AD714E35394A1F81E34A61D869806C3BC530860C2078C93AEB8E1AF8451EBDA8DE07C72E824355BD7577545E2BAEDBC2C1AB519EF852B09F8C238F0A43DE593668F4A7E5EEB57836C7BC1FC13D3DD0B28DC5AF57F97F0F62A9BCA88EBAF05A930AA55FA0C4E03D2BE40A7CF7DAF88F95C1F85C57387746D5D1633A3EA858C9EC3D4E77BD04CD1BCF18C1977408B9D626211463140405FC320802CB8BCCF5EF5E21BDB6C50170E01496BA4754CA4729A2BE85691DBA061A13865C9C67DDC456E2E801A79737F6863134EDBAE8E23C053B7737FEFDF925AA2C9900E0F94CD247C64951C622125D9D975686EE33720B613DE130E46F28B8FA903508A9DC4B2A22FA0C8787B760D499153F455ED48A2341C61E66AA2A1108DA1537BE11BE9202234D519C5A63F7A1FB7D4494C028450C6B8675E0BC505D9706DA0181C6B550DE8B4FC2B2827172F7C05FB434DCBB4FD75A640500DF225E825AAFA502DAE6B3CA1B3C48D281E989195B7A57B61952D29C0F492B85D9B7A7CD27046CF355014B17A78C9BAC0EE4F415991CB21D53AA8713367EEE100E6B4C2BC58395B79456DFADC1BC2D447E52C09410D3580D822C5D34E69B4731E323E9AF366B0649
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/ArialMT cguidfix
/F1.1/ArialMT renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.9370361 0.94117802 0.94519204 sc
q
0 0 257 86 rc
14 83 m
243 83 l
249.07513 83 254 78.075134 254 72 c
254 14 l
254 7.9248676 249.07513 3 243 3 c
14 3 l
7.9248676 3 3 7.9248676 3 14 c
3 72 l
3 78.075134 7.9248676 83 14 83 c
h
14 83 m
f
3 w
1 J
1 j
0.60000002 i
0.83877033 0.85086018 0.86325628 sc
1 0 0 -1 -217 341 cm
231 258 m
460 258 l
466.07513 258 471 262.92487 471 269 c
471 327 l
471 333.07513 466.07513 338 460 338 c
231 338 l
224.92487 338 220 333.07513 220 327 c
220 269 l
220 262.92487 224.92487 258 231 258 c
h
231 258 m
S
0 i
0.70532978 0.72138089 0.73797923 sc
CM
44.57106 49.57106 m
48.476318 45.665821 48.476318 39.334179 44.57106 35.42894 c
40.665821 31.52368 34.334179 31.52368 30.42894 35.42894 c
26.52368 39.334179 26.52368 45.665821 30.42894 49.57106 c
34.334179 53.476318 40.665821 53.476318 44.57106 49.57106 c
f
25 0 0 25 25 30 cm
BI
/Width 75
/Height 75
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
J+)msn*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;
n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
n6keTnF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ojsn*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:
naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:@.E^TnaGu;n*ol9nF>u:naGu;n*ol9nF>u:
naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;
n*ol9nF;"snF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;
n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGsTnaGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:nUL#snaGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:
naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*j`Tn*ol9nF>u:naGu;n*ol9nF>u:
naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;
n*ol9nF>u:naGu;J+)msn*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;
n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9n6keTnF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ojsn*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:
naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:@.E^TnaGu;n*ol9nF>u:
naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;
n*ol9nF>u:naGu;n*ol9nF;"snF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;
n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF>u:naGsTnaGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:nUL#snaGu;n*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:
naGu;n*ol9nF>u:naGu;n*ol9nF>i2mc3BjgYLc=g"Y$-g!\C%eCN=)g"Y9;hrEe[lg/$In*ol9nF>u:
naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;
n*ol9nF>u:naGu;n*ol9nF>u:naGu;J+)msn*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;
n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:n`]6'f@es$bKd]5_R-hc[(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\6ut\^;A"8cI^b)kiqF%nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ojsn*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:
naGu;n*ol6mI&TZgVUqO[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y@(`kV
]X52][(*cU\@f\tak,5#m-X60nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;
n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF;"snF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;
n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;lKdf`e((t?^U1M`[(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X51V]X52][(*cU\@f2Y]X52][(*cY]>)_Ae`uJen*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:
nUL#snaGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:
na5c5eCN<^]=tY^]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[('MV[(*cU\@f2Y]X52][(*cU\@f2Y]X52]\%BB(f%KHYn*fc9n*ol9nF>u:naGu;n*ol9nF>u:naGu;
n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;J+)msn*ol9nF>u:naGu;n*ol9nF>u:naGu;
n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:n`&Tj]tqXo\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\6utV\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]Y2/"ioB.hnF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:
naGu;n*ojsn*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>r8
nC,t@[CNuX\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y@(`kV]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cV\\6JCf^A4tn*ol9nF>u:naGu;
n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF;"snF>u:naGu;n*ol9nF>u:naGu;
n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>l5n&EJn[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X51V]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52]`lZHkmdKW6naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:
naGu;n*ol9nF>u:nUL#snaGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>f1
mD6`^[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][('MV[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@fYraQi-Z
n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;J+)msn*ol9nF>u:naGu;
n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>f1mCpEU[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\6utV\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]^;7eRm-X92naGu;n*ol9nF>u:naGu;n*ol9nF>u:
naGu;n*ol9nF>u:naGu;n*ojsn*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>l5
n%lr`[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y@(`kV]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@fYraR&?`n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF;"snF>u:naGu;
n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>r8nA`So[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X51V]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]`lZHmn*of8naGu;n*ol9nF>u:
naGu;n*ol9nF>u:naGu;n*ol9nF>u:nUL#snaGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:
n^H(A[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][('MV[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@g;Af^J>"n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;J+)ms
n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:n`&Tj[CNuX\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\6utV
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X>;`ioB.hnF>u:
naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ojsn*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:
na5c5]tqXo\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y@(`kV]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*c^_8Pa/n*fc9n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF;"snF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;eCN<[\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y
]X51V]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y
][YNcn*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:nUL#snaGu;n*ol9nF>u:naGu;n*ol9nF>u:
naGu;lKdfG]=tY^]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][('MV[(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]\%BB>lg4*0naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;J+)msn*ol9nF>u:naGu;n*ol9nF>u:naGu;n*okoe((h8]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y
]X52][(*cU\6utV\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y
]X52][(*cU\@g2;eaN"tn*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ojsn*ol9nF>u:naGu;n*ol9nF>u:
naGu;n*ol6mI%Kr^U1M`[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y@(`kV]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]XYSgm-X60nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF;"snF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>,`gU+K'[(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y
]X52][(*cU\@f2Y]X51V]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y
]X52][(*cU\@f2Y]X52][(*d#g"YubnaGu;n*ol9nF>u:naGu;n*ol9nF>u:nUL#snaGu;n*ol9nF>u:
naGu;n*ol9nF>u:n\W8d[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][('MV[(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f\taRAWgn*ol9
nF>u:naGu;n*ol9nF>u:naGu;J+)msn*ol9nF>u:naGu;n*ol9nF>u:n`]6'[(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y
]X52][(*cU\@f2Y]X52][(*cU\6utV\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y
]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]kiqF%nF>u:naGu;n*ol9nF>u:naGu;n*ojsn*ol9nF>u:
naGu;n*ol9nF>u:naGu;f@erd\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y@(`kV]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*d#
g"c&cnaGu;n*ol9nF>u:naGu;n*ol9nF;"snF>u:naGu;n*ol9nF>u:naGu;n*okhbKdK)]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y
]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X51V]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y
]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@fr,cL:8mn*ol9nF>u:naGu;n*ol9nF>u:nUL#s
naGu;n*ol9nF>u:naGu;n*ol9nF=*(_R-hc[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][('MV
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]Xkhon*ol9nF>u:naGu;n*ol9nF>u:naGu;J+)msn*ol9nF>u:naGu;n*ol9nF>i2m^0L:[(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y
]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\6utV\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y
]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*d7m-a?3naGu;n*ol9nF>u:naGu;
n*ojsn*ol9nF>u:naGu;n*ol9nF>u:n`/]m[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\@f2Y@(`kV]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@gk_k3qg0n*ol9nF>u:naGu;n*ol9nF;"snF>u:naGu;n*ol9nF>u:naGu;gYLbo
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y
]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X51V]X52][(*cU\@f2Y]X52][(*cU\@f2Y
]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]\D9"n*ol9nF>u:naGu;
n*ol9nF>u:nUL#snaGu;n*ol9nF>u:naGu;n*ol!g"WmD]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]X52][('MV[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52]f@epInF>u:naGu;n*ol9nF>u:naGu;J+)msn*ol9nF>u:naGu;n*ol9
nF>#ZfsJ9%[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y
]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\6utV\@f2Y]X52][(*cU\@f2Y
]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cuf%KN]naGu;
n*ol9nF>u:naGu;n*ojsn*ol9nF>u:naGu;n*ol9nF>u:n^>q=[(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y@(`kV]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@g8>fC/5!n*ol9nF>u:naGu;n*ol9nF;"snF>u:naGu;n*ol9
nF>u:naGu;eCN<[\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y
]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X51V]X52][(*cU\@f2Y
]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y][YNc
n*ol9nF>u:naGu;n*ol9nF>u:nUL#snaGu;n*ol9nF>u:naGu;n*ol!g"WmD]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][('MV[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]f@epInF>u:naGu;n*ol9nF>u:naGu;J+)msn*ol9
nF>u:naGu;n*ol9nF>8hhmBo+[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y
]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\6utV\@f2Y
]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*d'h;@\jnaGu;n*ol9nF>u:naGu;n*ojsn*ol9nF>u:naGu;n*ol9nF>u:n`/]m[(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y@(`kV]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@gk_k3qg0n*ol9nF>u:naGu;n*ol9nF;"s
nF>u:naGu;n*ol9nF>u:naGu;lg4&H\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y
]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X51V
]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]^+qPn*ol9nF>u:naGu;n*ol9nF>u:nUL#snaGu;n*ol9nF>u:naGu;n*ol9nF=*(_R-hc
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][('MV[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]Xkhon*ol9nF>u:naGu;n*ol9nF>u:
naGu;J+)msn*ol9nF>u:naGu;n*ol9nF>u:n]Au"[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y
]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\6utV\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52]aihuunF>u:naGu;n*ol9nF>u:naGu;n*ojsn*ol9nF>u:naGu;n*ol9nF>u:naGu;
f@erd\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y@(`kV]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*d#g"c&cnaGu;n*ol9nF>u:
naGu;n*ol9nF;"snF>u:naGu;n*ol9nF>u:naGu;n*ol2l0G^d]X52][(*cU\@f2Y]X52][(*cU\@f2Y
]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X51V]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@h%ilgO?5n*ol9nF>u:naGu;n*ol9nF>u:nUL#snaGu;n*ol9nF>u:naGu;
n*ol9nF>u:n\W8d[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][('MV[(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f\tam\`hn*ol9nF>u:
naGu;n*ol9nF>u:naGu;J+)msn*ol9nF>u:naGu;n*ol9nF>u:naGu;f@eoc\@f2Y]X52][(*cU\@f2Y
]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\6utV\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y][tikn*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ojsn*ol9nF>u:naGu;
n*ol9nF>u:naGu;n*ol6mI%Kr^U1M`[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y@(`kV]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]XYSgm-X60nF>u:
naGu;n*ol9nF>u:naGu;n*ol9nF;"snF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:n^,b8[(*cU\@f2Y
]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X51V]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52]d*pP6nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:nUL#snaGu;
n*ol9nF>u:naGu;n*ol9nF>u:naGu;lKdfG]=tY^]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][('MV[(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]\%BB>lg4*0
naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;J+)msn*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>#Z
fsJ9%[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\6utV\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cuf%KN]naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ojs
n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:na5c5]tqXo\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y
@(`kV]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*c^_8Pa/
n*fc9n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF;"snF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:
naGu;n*ol,j5m\Z]sP;^[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X51V]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cV\\7"_jmV^/n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:nUL#snaGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:n^H(A[(*cU\@f2Y]X52][(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y
]X52][('MV[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@g;A
f^J>"n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;J+)msn*ol9nF>u:naGu;n*ol9nF>u:
naGu;n*ol9nF>u:naGu;mdKYbaiq-%]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\6utV\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@fi'bjOrhn*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ojsn*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>l5n%lr`[(*cU
\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y
]X52][(*cU\@f2Y@(`kV]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@fYr
aR&?`n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF;"snF>u:naGu;n*ol9nF>u:
naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;lKmoP_8Wdk]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X51V]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@fPl`TlgWn*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF>u:nUL#snaGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>f1mD6`^[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y
]X52][(*cU\@f2Y]X52][('MV[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@fYr
aQi-Zn*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;J+)msn*ol9nF>u:
naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;m-a>^aiq-%]X52][(*cU\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\6utV\@f2Y]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@fi'bj=cdn*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ojsn*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF>r8nC,t@[CNuX\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y
]X52][(*cU\@f2Y]X52][(*cU\@f2Y@(`kV]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cV\\6JC
f^A4tn*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF;"snF>u:
naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol,j5mtj`3d%e
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X51V]X52]
[(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*c^_8P?njmV^/n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:nUL#snaGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:na5c5eCN<^]=tY^]X52][(*cU\@f2Y]X52][(*cU\@f2Y
]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][('MV[(*cU\@f2Y]X52][(*cU\@f2Y]X52]\%BB(f%KHY
n*fc9n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;
J+)msn*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;
n*ol9nF>f0m*O53\@]M_\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\6utV\@f2Y]X52][(*cU\@f2Y]XYSgd*pP1lg4*0naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ojsn*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol6mI&TZgVUqN[(*cU\@f2Y
]X52][(*cU\@f2Y]X52][(*cU\@f2Y]X52][(*cU\@f2Y@(`kV]X52][(*cU\@f\taOf,"m-X60nF>u:
naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;
n*ol9nF;"snF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;
n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol2l0HsSgr[ab]"Z%g\@f2Y]X52][(*cU\@f2Y]X52][(*cU
\@f2Y]X51V]Xkhoaihu]g"bfUlgO?5n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:nUL#snaGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:
naGu;n*ol9nF>i2mc3BjgYLc=g"Y$-g!\C%eCN=)g"Y9;hrEe[lg/$In*ol9nF>u:naGu;n*ol9nF>u:
naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;
n*ol9nF>u:naGu;J+)msn*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;
n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9n6keTnF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ojsn*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:
naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:@.E^TnaGu;n*ol9nF>u:
naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;
n*ol9nF>u:naGu;n*ol9nF;"snF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;
n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF>u:naGsTnaGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:nUL#snaGu;n*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:
naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*j`Tn*ol9nF>u:
naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;
n*ol9nF>u:naGu;n*ol9nF>u:naGu;J+)msn*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;
n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ol9n6keTnF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ojsn*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:
naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:@.E^T
naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;
n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF;"snF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;
n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGsTnaGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9
nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:naGu;n*ol9nF>u:
nUL
~> %APLeod
EI
0.3245981 0.35261506 0.37763679 sc
1 0 0 -1 145.5 43 cm
/F1.1[ 39.299999 0 0 -39.299999 0 0]sf
-78.5 13.357153 m
(!"#$$%#$&)[ 19.650000 32.737207 21.856787 8.731201 8.731201 10.918799 21.856787 8.731201 0.000000 ] xS
ep
end
%%Trailer
%%EOF
